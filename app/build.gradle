apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.myinstapaper"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode getVersionCode()
        versionName getVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        prod {
            dimension "version"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def getVersionName() {
    // versionName in "MAJOR.MINOR-COMMIT-gHASH" format
    def versionValues = "git describe --tags".execute().text.split("-")
    if (versionValues.size() == 3)
        return "${versionValues[0]}.${versionValues[1]}"
    else
        return "${versionValues[0]}.0"
}

def getVersionCode() {
    def versionValues = "git describe --tags".execute().text.split("-")
    def (major, minor) = versionValues[0].tokenize("\\.")
    if (versionValues.size() == 3)
        return  major.toInteger() * 10000 +
                minor.toInteger() * 1000 +
                versionValues[1].toInteger() * 100
    else
        return  major.toInteger() * 10000 +
                minor.toInteger() * 1000
}

task printVersion() {
    println("Version Name: ${getVersionName()}")
    println("Version Code: ${getVersionCode()}")
}